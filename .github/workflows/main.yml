name: Build Electron App

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: windows-latest

    strategy:
      matrix:
        # 如果需要为多个平台编译，可以添加更多操作系统
        os: [windows-latest]
        # 默认情况下，Electron Forge 会根据当前系统生成相应的安装包
        # 比如在 macOS 上生成 .dmg 文件，在 Windows 上生成 .exe 文件

    steps:
      # 检出代码
      - name: Check out repository
        uses: actions/checkout@v2

      # 设置 Node.js 版本
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '23'

      # 安装依赖
      - name: Install dependencies
        run: npm install

      # 编译和打包应用
      - name: Build and package Electron app
        run: npm run make
        env:
          # 设置一些必要的环境变量（如果有的话）
          # 例如：API_KEY: ${{ secrets.API_KEY }}
          ELECTRON_SKIP_BINARY_DOWNLOAD: 'true' # 可选，加快构建速度

      # 将打包后的文件上传为 GitHub Actions 的 Artifacts
      - name: Upload Artifacts
        if: success()
        uses: actions/upload-artifact@v2
        with:
          name: ElectronApp
          path: out/make/*  # electron-forge 默认输出路径为 out/make
